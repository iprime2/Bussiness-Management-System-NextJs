// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String @unique
  image     String
  password  String
  isAdmin   Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model Creditor{
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  firmName  String
  ownerName String
  panNumber Int 
  phone     Int
  address   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  purchase Purchase[] 
}

model Debtor{
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  firmName  String
  ownerName String
  panNumber Int
  phone     Int
  address   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sales Sales[]
}


model Product{
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  weight    Int
  price     Int
  type      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 

  purchase Purchase[]
  sales Sales[]
}


model Purchase{
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  quantity  Int
  price     Int
  pricePaid Int
  totalAmount     Int
  totalWeight     Int
  paid      Boolean
  paidThrough    String
  proudctId String @db.ObjectId
  CreditorId String @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product Product @relation(fields: [proudctId], references: [id])
  creditor Creditor @relation(fields: [CreditorId], references: [id]) 
}

model Sales{
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  quantity  Int
  price     Int
  pricePaid Int
  totalAmount     Int
  totalWeight     Int
  paid      Boolean
  paidThrough    String
  debitorId String @db.ObjectId
  productId String @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt


  product Product @relation(fields: [productId], references: [id])
  debtor Debtor @relation(fields: [debitorId], references: [id])
}

